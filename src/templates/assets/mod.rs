use std::fs;
use std::io;
use std::path::{Path, PathBuf};

/// Raw bytes of the embedded Nessus logo image.
pub const NESSUS_LOGO_JPG: &[u8; 425] = &[
    0xff, 0xd8, 0xff, 0xe0, 0x00, 0x10, 0x4a, 0x46, 0x49, 0x46, 0x00, 0x01,
    0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0xff, 0xdb, 0x00, 0x84,
    0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
    0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x06, 0x04, 0x04, 0x04, 0x04,
    0x04, 0x08, 0x06, 0x06, 0x05, 0x06, 0x09, 0x08, 0x0a, 0x09, 0x09, 0x08,
    0x09, 0x09, 0x09, 0x0d, 0x0d, 0x0c, 0x0d, 0x0d, 0x0e, 0x0e, 0x0e, 0x0e,
    0x10, 0x10, 0x10, 0x16, 0x15, 0x12, 0x13, 0x14, 0x18, 0x18, 0x18, 0x1a,
    0x1c, 0x28, 0x20, 0x18, 0x1a, 0x25, 0x1d, 0x1f, 0x1f, 0x21, 0x31, 0x21,
    0x25, 0x29, 0x2b, 0x2e, 0x2e, 0x2e, 0x17, 0x1f, 0x33, 0x38, 0x33, 0x2d,
    0x37, 0x28, 0x2d, 0x2e, 0x2b, 0x01, 0x0a, 0x0a, 0x0a, 0x0d, 0x0d, 0x0d,
    0x0e, 0x0d, 0x0d, 0x0e, 0x2b, 0x19, 0x15, 0x19, 0x37, 0x2b, 0x2b, 0x2b,
    0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b,
    0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b,
    0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b,
    0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0x2b, 0xff, 0xc0,
    0x00, 0x11, 0x08, 0x00, 0x01, 0x00, 0x01, 0x03, 0x01, 0x11, 0x00, 0x02,
    0x11, 0x01, 0x03, 0x11, 0x01, 0xff, 0xc4, 0x00, 0x14, 0x00, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x05, 0xff, 0xc4, 0x00, 0x14, 0x11, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xff, 0xda, 0x00, 0x0c, 0x03, 0x01, 0x00, 0x02, 0x10, 0x03, 0x10,
    0x00, 0x00, 0x00, 0x9c, 0x03, 0xff, 0xc4, 0x00, 0x14, 0x10, 0x01, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xff, 0xda, 0x00, 0x08, 0x01, 0x01, 0x00, 0x01, 0x05,
    0x02, 0xa9, 0x7f, 0xff, 0xc4, 0x00, 0x14, 0x11, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xff, 0xda, 0x00, 0x08, 0x01, 0x03, 0x01, 0x01, 0x3f, 0x01, 0x87,
    0xff, 0xc4, 0x00, 0x14, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xda,
    0x00, 0x08, 0x01, 0x02, 0x01, 0x01, 0x3f, 0x01, 0x87, 0xff, 0xc4, 0x00,
    0x14, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xda, 0x00, 0x08, 0x01,
    0x01, 0x00, 0x06, 0x3f, 0x02, 0x5f, 0xff, 0xc4, 0x00, 0x14, 0x10, 0x01,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xff, 0xda, 0x00, 0x08, 0x01, 0x01, 0x00, 0x01,
    0x3f, 0x21, 0x5f, 0xff, 0xd9,
];

/// Access the embedded Nessus logo image bytes.
pub fn nessus_logo_jpg() -> &'static [u8] {
    NESSUS_LOGO_JPG
}

/// Write the embedded Nessus logo image to the system temporary directory and
/// return the path to the written file.
pub fn write_nessus_logo_jpg() -> io::Result<PathBuf> {
    let mut path = std::env::temp_dir();
    path.push("nessuslogo.jpg");
    fs::write(&path, NESSUS_LOGO_JPG)?;
    Ok(path)
}

/// Write the embedded Nessus logo image into the provided directory.
/// Returns the full path of the written file.
pub fn write_nessus_logo_jpg_to(dir: &Path) -> io::Result<PathBuf> {
    let path = dir.join("nessuslogo.jpg");
    fs::write(&path, NESSUS_LOGO_JPG)?;
    Ok(path)
}
